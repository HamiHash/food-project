{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER-PC\\\\Desktop\\\\React course lectures\\\\07 Food project\\\\src\\\\components\\\\Checkout\\\\Checkout.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Modal from \"../UI/Modal\";\nimport classes from \"./Checkout.module.css\";\nimport useInputGenerator from \"../hooks/input-generator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Checkout = props => {\n  _s();\n  const confirmHandler = event => {\n    event.preventDefault();\n\n    // Todo => FETCH TO BACKEND\n\n    nameReset();\n  };\n  const {\n    enteredValue: nameValue,\n    inputIsValid: nameIsValid,\n    inputHasError: nameHasError,\n    valueChangeHandler: nameChangeHandler,\n    blurHandler: nameBlurHandler,\n    reset: nameReset\n  } = useInputGenerator(nameValue => nameValue.trim() !== \"\");\n  const [formIsValid, setFormIsValid] = useState(false);\n  useEffect(() => {\n    if (nameHasError) setFormIsValid(false);\n  }, [nameHasError]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.control,\n      onSubmit: confirmHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: !nameHasError ? classes.control : classes.invalid,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Your Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: nameValue,\n          onChange: nameChangeHandler,\n          onBlur: nameBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"street\",\n          children: \"Street\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"street\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postal\",\n          children: \"Postal Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"postal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"city\",\n          children: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"city\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: props.onCloseCheckout,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !formIsValid,\n          className: classes.submit,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Checkout, \"EhYEuAqsomSGlZUZRgzXnH4m688=\", false, function () {\n  return [useInputGenerator];\n});\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["useEffect","useState","Modal","classes","useInputGenerator","Checkout","props","confirmHandler","event","preventDefault","nameReset","enteredValue","nameValue","inputIsValid","nameIsValid","inputHasError","nameHasError","valueChangeHandler","nameChangeHandler","blurHandler","nameBlurHandler","reset","trim","formIsValid","setFormIsValid","control","invalid","actions","onCloseCheckout","submit"],"sources":["C:/Users/USER-PC/Desktop/React course lectures/07 Food project/src/components/Checkout/Checkout.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Modal from \"../UI/Modal\";\r\nimport classes from \"./Checkout.module.css\";\r\nimport useInputGenerator from \"../hooks/input-generator\";\r\n\r\nconst Checkout = (props) => {\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Todo => FETCH TO BACKEND\r\n\r\n    nameReset();\r\n  };\r\n\r\n  const {\r\n    enteredValue: nameValue,\r\n    inputIsValid: nameIsValid,\r\n    inputHasError: nameHasError,\r\n    valueChangeHandler: nameChangeHandler,\r\n    blurHandler: nameBlurHandler,\r\n    reset: nameReset,\r\n  } = useInputGenerator((nameValue) => nameValue.trim() !== \"\");\r\n\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n  useEffect(() => {\r\n    if (nameHasError) setFormIsValid(false);\r\n  }, [nameHasError]);\r\n\r\n  return (\r\n    <Modal>\r\n      <form className={classes.control} onSubmit={confirmHandler}>\r\n        <div className={!nameHasError ? classes.control : classes.invalid}>\r\n          <label htmlFor=\"name\">Your Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            value={nameValue}\r\n            onChange={nameChangeHandler}\r\n            onBlur={nameBlurHandler}\r\n          />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"street\">Street</label>\r\n          <input type=\"text\" id=\"street\" />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"postal\">Postal Code</label>\r\n          <input type=\"text\" id=\"postal\" />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"city\">City</label>\r\n          <input type=\"text\" id=\"city\" />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <button type=\"button\" onClick={props.onCloseCheckout}>\r\n            Cancel\r\n          </button>\r\n          <button disabled={!formIsValid} className={classes.submit}>\r\n            Confirm\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}