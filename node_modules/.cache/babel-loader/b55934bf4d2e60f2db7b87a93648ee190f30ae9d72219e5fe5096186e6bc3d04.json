{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER-PC\\\\Desktop\\\\React course lectures\\\\07 Food project\\\\src\\\\components\\\\Checkout\\\\Checkout.js\",\n  _s2 = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport Modal from \"../UI/Modal\";\nimport classes from \"./Checkout.module.css\";\nimport useInputValidation from \"../hooks/input-validation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Checkout = props => {\n  _s2();\n  var _s = $RefreshSig$();\n  const confirmHandler = event => {\n    _s();\n    event.preventDefault();\n\n    //* Getting the values\n    const nameInputRef = useRef();\n\n    // Todo => FETCH TO BACKEND\n    console.log();\n    nameReset();\n    streetReset();\n    postReset();\n    cityReset();\n  };\n  _s(confirmHandler, \"p/t2K+SMLkRDR3NnTFL0cQL9W/k=\");\n  const {\n    enteredValue: nameValue,\n    inputIsValid: nameIsValid,\n    inputHasError: nameHasError,\n    valueChangeHandler: nameChangeHandler,\n    blurHandler: nameBlurHandler,\n    reset: nameReset\n  } = useInputValidation(nameValue => nameValue.trim() !== \"\");\n  const {\n    enteredValue: streetValue,\n    inputIsValid: streetIsValid,\n    inputHasError: streetHasError,\n    valueChangeHandler: streetChangeHandler,\n    blurHandler: streetBlurHandler,\n    reset: streetReset\n  } = useInputValidation(streetValue => streetValue.trim() !== \"\");\n  const {\n    enteredValue: postValue,\n    inputIsValid: postIsValid,\n    inputHasError: postHasError,\n    valueChangeHandler: postChangeHandler,\n    blurHandler: postBlurHandler,\n    reset: postReset\n  } = useInputValidation(postValue => postValue.trim() !== \"\");\n  const {\n    enteredValue: cityValue,\n    inputIsValid: cityIsValid,\n    inputHasError: cityHasError,\n    valueChangeHandler: cityChangeHandler,\n    blurHandler: cityBlurHandler,\n    reset: cityReset\n  } = useInputValidation(cityValue => cityValue.trim() !== \"\");\n  const [formIsValid, setFormIsValid] = useState(false);\n  useEffect(() => {\n    if (nameIsValid || streetIsValid || postIsValid || cityIsValid) setFormIsValid(true);else setFormIsValid(false);\n  }, [nameIsValid, streetIsValid, postIsValid, cityIsValid]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.control,\n      onSubmit: confirmHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: !nameHasError ? classes.control : classes.invalid,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Your Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: nameValue,\n          onChange: nameChangeHandler,\n          onBlur: nameBlurHandler,\n          ref: nameInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: !streetHasError ? classes.control : classes.invalid,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"street\",\n          children: \"Street\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"street\",\n          value: streetValue,\n          onChange: streetChangeHandler,\n          onBlur: streetBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: !postHasError ? classes.control : classes.invalid,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postal\",\n          children: \"Postal Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"postal\",\n          value: postValue,\n          onChange: postChangeHandler,\n          onBlur: postBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: !cityHasError ? classes.control : classes.invalid,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"city\",\n          children: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"city\",\n          value: cityValue,\n          onChange: cityChangeHandler,\n          onBlur: cityBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: props.onCloseCheckout,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !formIsValid,\n          className: classes.submit,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s2(Checkout, \"BvxfmXsgxZ/QMBniqDRdHf8owWo=\", false, function () {\n  return [useInputValidation, useInputValidation, useInputValidation, useInputValidation];\n});\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["useEffect","useRef","useState","Modal","classes","useInputValidation","Checkout","props","confirmHandler","event","preventDefault","nameInputRef","console","log","nameReset","streetReset","postReset","cityReset","enteredValue","nameValue","inputIsValid","nameIsValid","inputHasError","nameHasError","valueChangeHandler","nameChangeHandler","blurHandler","nameBlurHandler","reset","trim","streetValue","streetIsValid","streetHasError","streetChangeHandler","streetBlurHandler","postValue","postIsValid","postHasError","postChangeHandler","postBlurHandler","cityValue","cityIsValid","cityHasError","cityChangeHandler","cityBlurHandler","formIsValid","setFormIsValid","control","invalid","actions","onCloseCheckout","submit"],"sources":["C:/Users/USER-PC/Desktop/React course lectures/07 Food project/src/components/Checkout/Checkout.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport Modal from \"../UI/Modal\";\r\nimport classes from \"./Checkout.module.css\";\r\nimport useInputValidation from \"../hooks/input-validation\";\r\n\r\nconst Checkout = (props) => {\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    //* Getting the values\r\n    const nameInputRef = useRef();\r\n\r\n    // Todo => FETCH TO BACKEND\r\n    console.log();\r\n\r\n    nameReset();\r\n    streetReset();\r\n    postReset();\r\n    cityReset();\r\n  };\r\n\r\n  const {\r\n    enteredValue: nameValue,\r\n    inputIsValid: nameIsValid,\r\n    inputHasError: nameHasError,\r\n    valueChangeHandler: nameChangeHandler,\r\n    blurHandler: nameBlurHandler,\r\n    reset: nameReset,\r\n  } = useInputValidation((nameValue) => nameValue.trim() !== \"\");\r\n\r\n  const {\r\n    enteredValue: streetValue,\r\n    inputIsValid: streetIsValid,\r\n    inputHasError: streetHasError,\r\n    valueChangeHandler: streetChangeHandler,\r\n    blurHandler: streetBlurHandler,\r\n    reset: streetReset,\r\n  } = useInputValidation((streetValue) => streetValue.trim() !== \"\");\r\n\r\n  const {\r\n    enteredValue: postValue,\r\n    inputIsValid: postIsValid,\r\n    inputHasError: postHasError,\r\n    valueChangeHandler: postChangeHandler,\r\n    blurHandler: postBlurHandler,\r\n    reset: postReset,\r\n  } = useInputValidation((postValue) => postValue.trim() !== \"\");\r\n\r\n  const {\r\n    enteredValue: cityValue,\r\n    inputIsValid: cityIsValid,\r\n    inputHasError: cityHasError,\r\n    valueChangeHandler: cityChangeHandler,\r\n    blurHandler: cityBlurHandler,\r\n    reset: cityReset,\r\n  } = useInputValidation((cityValue) => cityValue.trim() !== \"\");\r\n\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n  useEffect(() => {\r\n    if (nameIsValid || streetIsValid || postIsValid || cityIsValid)\r\n      setFormIsValid(true);\r\n    else setFormIsValid(false);\r\n  }, [nameIsValid, streetIsValid, postIsValid, cityIsValid]);\r\n\r\n  return (\r\n    <Modal>\r\n      <form className={classes.control} onSubmit={confirmHandler}>\r\n        <div className={!nameHasError ? classes.control : classes.invalid}>\r\n          <label htmlFor=\"name\">Your Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            value={nameValue}\r\n            onChange={nameChangeHandler}\r\n            onBlur={nameBlurHandler}\r\n            ref={nameInputRef}\r\n          />\r\n        </div>\r\n        <div className={!streetHasError ? classes.control : classes.invalid}>\r\n          <label htmlFor=\"street\">Street</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"street\"\r\n            value={streetValue}\r\n            onChange={streetChangeHandler}\r\n            onBlur={streetBlurHandler}\r\n          />\r\n        </div>\r\n        <div className={!postHasError ? classes.control : classes.invalid}>\r\n          <label htmlFor=\"postal\">Postal Code</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"postal\"\r\n            value={postValue}\r\n            onChange={postChangeHandler}\r\n            onBlur={postBlurHandler}\r\n          />\r\n        </div>\r\n        <div className={!cityHasError ? classes.control : classes.invalid}>\r\n          <label htmlFor=\"city\">City</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"city\"\r\n            value={cityValue}\r\n            onChange={cityChangeHandler}\r\n            onBlur={cityBlurHandler}\r\n          />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <button type=\"button\" onClick={props.onCloseCheckout}>\r\n            Cancel\r\n          </button>\r\n          <button disabled={!formIsValid} className={classes.submit}>\r\n            Confirm\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}